// Code generated by protoc-gen-go from "test.proto"
// DO NOT EDIT!

package my_test

import proto "goprotobuf.googlecode.com/hg/proto"
import imp "imp.pb"

// Reference proto import to suppress error if it's not otherwise used.
var _ = proto.GetString

type HatType int32
const (
	HatType_FEDORA = 1
	HatType_FEZ = 2
)
var HatType_name = map[int32] string {
	1: "FEDORA",
	2: "FEZ",
}
var HatType_value = map[string] int32 {
	"FEDORA": 1,
	"FEZ": 2,
}
func NewHatType(x int32) *HatType {
	e := HatType(x)
	return &e
}

type Days int32
const (
	Days_MONDAY = 1
	Days_TUESDAY = 2
	Days_LUNDI = 1
)
var Days_name = map[int32] string {
	1: "MONDAY",
	2: "TUESDAY",
	// Duplicate value: 1: "LUNDI",
}
var Days_value = map[string] int32 {
	"MONDAY": 1,
	"TUESDAY": 2,
	"LUNDI": 1,
}
func NewDays(x int32) *Days {
	e := Days(x)
	return &e
}

type Request_Color int32
const (
	Request_RED = 0
	Request_GREEN = 1
	Request_BLUE = 2
)
var Request_Color_name = map[int32] string {
	0: "RED",
	1: "GREEN",
	2: "BLUE",
}
var Request_Color_value = map[string] int32 {
	"RED": 0,
	"GREEN": 1,
	"BLUE": 2,
}
func NewRequest_Color(x int32) *Request_Color {
	e := Request_Color(x)
	return &e
}

type Reply_Entry_Game int32
const (
	Reply_Entry_FOOTBALL = 1
	Reply_Entry_TENNIS = 2
)
var Reply_Entry_Game_name = map[int32] string {
	1: "FOOTBALL",
	2: "TENNIS",
}
var Reply_Entry_Game_value = map[string] int32 {
	"FOOTBALL": 1,
	"TENNIS": 2,
}
func NewReply_Entry_Game(x int32) *Reply_Entry_Game {
	e := Reply_Entry_Game(x)
	return &e
}

type Request struct {
	Key	[]int64	"PB(varint,1,rep,name=key)"
	ImportedMessage	*imp.ImportedMessage	"PB(bytes,2,opt,name=imported_message)"
	Hue	*Request_Color	"PB(varint,3,opt,name=hue,enum=my_test.Request_Color)"
	Hat	*HatType	"PB(varint,4,opt,name=hat,enum=my_test.HatType,def=1)"
	Owner	*imp.ImportedMessage_Owner	"PB(varint,6,opt,name=owner,enum=imp.ImportedMessage_Owner)"
	XXX_unrecognized	[]byte
}
func (this *Request) Reset() {
	*this = Request{}
}
const Default_Request_Hat HatType = HatType_FEDORA

type Reply struct {
	Found	[]*Reply_Entry	"PB(bytes,1,rep,name=found)"
	XXX_extensions		map[int32][]byte
	XXX_unrecognized	[]byte
}
func (this *Reply) Reset() {
	*this = Reply{}
}

var extRange_Reply = []proto.ExtensionRange{
	proto.ExtensionRange{100, 536870911},
}
func (*Reply) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Reply
}
func (this *Reply) ExtensionMap() map[int32][]byte {
	if this.XXX_extensions == nil {
		this.XXX_extensions = make(map[int32][]byte)
	}
	return this.XXX_extensions
}

type Reply_Entry struct {
	KeyThatNeeds_1234Camel_CasIng	*int64	"PB(varint,1,req,name=key_that_needs_1234camel_CasIng)"
	Value	*int64	"PB(varint,2,opt,name=value,def=7)"
	XMyFieldName_2	*int64	"PB(varint,3,opt,name=_my_field_name_2)"
	XXX_unrecognized	[]byte
}
func (this *Reply_Entry) Reset() {
	*this = Reply_Entry{}
}
const Default_Reply_Entry_Value int64 = 7

type ReplyExtensions struct {
	XXX_unrecognized	[]byte
}
func (this *ReplyExtensions) Reset() {
	*this = ReplyExtensions{}
}

var E_ReplyExtensions_Time = &proto.ExtensionDesc{
	ExtendedType: (*Reply)(nil),
	ExtensionType: (*float64)(nil),
	Field: 101,
	Tag: "PB(fixed64,101,opt,name=time)",
}

var E_Tag = &proto.ExtensionDesc{
	ExtendedType: (*Reply)(nil),
	ExtensionType: (*string)(nil),
	Field: 103,
	Tag: "PB(bytes,103,opt,name=tag)",
}

func init() {
	proto.RegisterEnum("my_test.HatType", HatType_name, HatType_value)
	proto.RegisterEnum("my_test.Days", Days_name, Days_value)
	proto.RegisterEnum("my_test.Request_Color", Request_Color_name, Request_Color_value)
	proto.RegisterEnum("my_test.Reply_Entry_Game", Reply_Entry_Game_name, Reply_Entry_Game_value)
}
